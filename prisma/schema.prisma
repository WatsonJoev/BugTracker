generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Issue {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  description String
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  assignedTo  String?  @db.Uuid
  createdBy   String?  @db.Uuid
  tags        Json[]   @default([])
  Assigned    Profile? @relation("Assigned", fields: [assignedTo], references: [id])
  Owner       Profile? @relation("Owner", fields: [createdBy], references: [id])

  @@map("issue")
}

model IssueTags {
  id      Int    @id @default(autoincrement())
  tagName String @default("")

  @@map("issueTags")
}

model Profile {
  id       String  @id @db.Uuid
  role     Role    @default(user)
  email    String  @default("")
  firstname String  @default("")
  lastname String  @default("")
  orgId    String? @db.Uuid
  OrgID    Org?    @relation("OrgID", fields: [orgId], references: [id])
  Assigned Issue[] @relation("Assigned")
  Owner    Issue[] @relation("Owner")
  Owning   Org[]   @relation("Owning")

  @@map("profile")
}

model Org {
  id        String    @id @default(uuid()) @db.Uuid
  name      String    @default("")
  address   String    @default("")
  strength  String    @default("")
  username  String    @default("")
  org_owner String?   @db.Uuid
  Owning    Profile?  @relation("Owning", fields: [org_owner], references: [id])
  OrgID     Profile[] @relation("OrgID")

  @@map("org")
}

enum Role {
  admin
  user
}

enum Status {
  OPEN
  IN_PROGRESS
  HOLD
  CLOSE
}
